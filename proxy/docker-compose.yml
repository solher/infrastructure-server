version: '2'
services:  
  nginx:
    image: solher/nginx-proxy
    container_name: nginx
    restart: always
    networks:
      - internal
      - back
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /tmp/swarm/certs:/tmp/swarm/certs:ro
      - letsencrypt:/etc/nginx/certs:ro
    environment:
      - DOCKER_TLS_VERIFY
      - DOCKER_HOST
      - DOCKER_CERT_PATH=/tmp/swarm/certs
      - AUTH_ENDPOINT=${AUTH_VIRTUAL_HOST}
      - "constraint:type==nginx"

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: always
    networks:
      - internal
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/etc/nginx/certs:rw
    depends_on:
      - nginx
    environment:
      - "constraint:type==nginx"
      - "affinity:container==nginx"

  nginx-auth:
    image: solher/auth-nginx-proxy-companion
    container_name: nginx-auth
    restart: always
    networks:
      - internal
      - back
    volumes:
      - auth:/var/lib/auth-nginx-proxy-companion:rw
    environment:
      - GRANT_ALL=true
      - VIRTUAL_HOST=${AUTH_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${AUTH_VIRTUAL_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}  
      - "constraint:type==infra"

volumes:
  auth:
  letsencrypt:

networks:
  internal:
  back: